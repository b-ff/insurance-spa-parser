!function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=0)}([function(t,e){var r=this&&this.__spreadArrays||function(){for(var t=0,e=0,r=arguments.length;e<r;e++)t+=arguments[e].length;var n=Array(t),o=0;for(e=0;e<r;e++)for(var i=arguments[e],u=0,s=i.length;u<s;u++,o++)n[o]=i[u];return n},n=/^filter-panel-\d{4,}_header-title-textEl$/,o=/^messageTypeCombo-\d{4,}-inputEl$/,i=/^commonInsurersCombo-\d{4,}-picker-listEl$/,u=/^commonInsurersCombo-\d{4,}-trigger-picker$/,s=/^filter-panel-\d{4,}$/,l=/^parcelsList-\d{4,}-body$/,a=function(t,e,r){void 0===r&&(r="div");var n=t.querySelectorAll(r);return Array.from(n).find((function(t){return e.test(t.id)}))};window.getElementByIdPattern=a;var c=function(){function t(){var t=this,e=setInterval((function(){var r=a(document,n);if(r){t.addStartButton(r);var o=a(document,u);o.click(),setTimeout((function(){o.click()}),500),clearInterval(e)}}),500);this.log("Parser initialized!")}return t.prototype.log=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];console&&console.log&&console.log.apply(console,r(["Parser: "],t))},t.prototype.addStartButton=function(t){var e=this,r=document.createElement("button");r.innerHTML="Запустить сбор данных",r.id="parser-start-button",r.style.marginLeft="10px",r.style.cursor="pointer",r.onclick=function(){e.startParser()},t.append(r),this.log("Added start button to container:",t)},t.prototype.startParser=function(){this.log("Parser started!"),this.setMessageType(this.getMessageTypes()[0]),this.setInsurer(this.getInsurers()[0]),this.getFilterSubmitButton().click(),this.downloadFile(this.getFilesList().pop())},t.prototype.getMessageTypes=function(){return["Отчёт МО в МГФОМС","Отчёт МО в СМО"]},t.prototype.setMessageType=function(t){a(document,o,"input").value=t,this.log("Set message type filter to:",t)},t.prototype.getInsurersSuggestions=function(){return Array.from(a(document,i,"ul").childNodes)},t.prototype.getInsurers=function(){return this.getInsurersSuggestions().map((function(t){return t.textContent}))},t.prototype.setInsurer=function(t){this.getInsurersSuggestions().find((function(e){return e.textContent===t})).click(),this.log("Set insurer filter to:",t)},t.prototype.getFilterSubmitButton=function(){var t=a(document,s).querySelectorAll("a.x-btn");return t.length?t[0]:null},t.prototype.getDateFromElement=function(t){if(t){if(t.textContent)return e=t.textContent,r="dd.mm.yyyy hh:ii",n=e.replace(/[^a-zA-Z0-9]/g,"-"),o=r.toLowerCase().replace(/[^a-zA-Z0-9]/g,"-").split("-"),i=n.split("-"),u=o.indexOf("mm"),s=o.indexOf("dd"),l=o.indexOf("yyyy"),a=o.indexOf("hh"),c=o.indexOf("ii"),d=o.indexOf("ss"),f=new Date,p=l>-1?+i[l]:f.getFullYear(),g=u>-1?+i[u]:f.getMonth(),y=s>-1?+i[s]:f.getDate(),m=a>-1?+i[a]:f.getHours(),h=c>-1?+i[c]:f.getMinutes(),v=d>-1?+i[d]:f.getSeconds(),new Date(p,g,y,m,h,v);this.log("Empty Date Cell Text!",t)}else this.log("Date node not found!",t);var e,r,n,o,i,u,s,l,a,c,d,f,p,g,y,m,h,v;return null},t.prototype.getFilesList=function(){var t=this;return Array.from(a(document,l).querySelectorAll("table")).map((function(e){var r=e.querySelectorAll("td"),n=r[5],o=r[9];return{url:n?n.querySelector("a").href:null,sendDate:o?t.getDateFromElement(o.firstChild):new Date}})).sort((function(t,e){return t.sendDate.getTime()-e.sendDate.getTime()}))},t.prototype.downloadFile=function(t){this.log("file download >>",t),t.url&&window.open(t.url,"_blank")},t}();window.parser=new c}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,