!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t){var n=this&&this.__spreadArrays||function(){for(var e=0,t=0,n=arguments.length;t<n;t++)e+=arguments[t].length;var r=Array(e),o=0;for(t=0;t<n;t++)for(var i=arguments[t],u=0,l=i.length;u<l;u++,o++)r[o]=i[u];return r},r=/^filter-panel-\d{4,}_header-title-textEl$/,o=/^messageTypeCombo-\d{4,}-inputEl$/,i=/^commonInsurersCombo-\d{4,}-picker-listEl$/,u=/^commonInsurersCombo-\d{4,}-trigger-picker$/,l=/^filter-panel-\d{4,}$/,s=/^parcelsList-\d{4,}-body$/,a=function(e,t,n){void 0===n&&(n="div");var r=e.querySelectorAll(n);return Array.from(r).find((function(e){return t.test(e.id)}))},c=function(){function e(){var e=this,t=setInterval((function(){var n=a(document,r);if(n){e.addStartButton(n);var o=a(document,u);o.click(),setTimeout((function(){o.click()}),500),clearInterval(t)}}),500);this.log("Parser initialized!")}return e.prototype.log=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];console&&console.log&&console.log.apply(console,n(["Parser: "],e))},e.prototype.addStartButton=function(e){var t=this,n=document.createElement("button");n.innerHTML="Запустить сбор данных",n.id="parser-start-button",n.style.marginLeft="10px",n.style.cursor="pointer",n.onclick=function(){t.startParser()},e.append(n),this.log("Added start button to container:",e)},e.prototype.startParser=function(){var e=this;this.log("Parser started!");var t=this.getMessageTypes(),n=this.getInsurers();this.log("Loaded filter values:",{messageTypes:t,insurers:n}),this.log("Running a queue");var r=0;t.forEach((function(o,i){n.forEach((function(u,l){setTimeout((function(){e.log("Applying filter values:",{messageType:o,insurer:u}),e.setMessageType(o),e.setInsurer(u),e.getFilterSubmitButton().click(),setTimeout((function(){e.log("Getting files list"),e.downloadFile(e.getFilesList().pop());var r=i===t.length-1,o=l===n.length-1;r&&o&&alert("Загрузка файлов завершена!")}),5e3)}),7e3*r),r++}))}))},e.prototype.getMessageTypes=function(){return["Отчёт МО в МГФОМС","Отчёт МО в СМО"]},e.prototype.setMessageType=function(e){a(document,o,"input").value=e,this.log("Set message type filter to:",e)},e.prototype.getInsurersSuggestions=function(){return Array.from(a(document,i,"ul").childNodes)},e.prototype.getInsurers=function(){return this.getInsurersSuggestions().map((function(e){return e.textContent}))},e.prototype.setInsurer=function(e){this.getInsurersSuggestions().find((function(t){return t.textContent===e})).click(),this.log("Set insurer filter to:",e)},e.prototype.getFilterSubmitButton=function(){var e=a(document,l).querySelectorAll("a.x-btn");return e.length?e[0]:null},e.prototype.getDateFromElement=function(e){if(e){if(e.textContent)return t=e.textContent,n="dd.mm.yyyy hh:ii",r=t.replace(/[^a-zA-Z0-9]/g,"-"),o=n.toLowerCase().replace(/[^a-zA-Z0-9]/g,"-").split("-"),i=r.split("-"),u=o.indexOf("mm"),l=o.indexOf("dd"),s=o.indexOf("yyyy"),a=o.indexOf("hh"),c=o.indexOf("ii"),f=o.indexOf("ss"),d=new Date,p=s>-1?+i[s]:d.getFullYear(),g=u>-1?+i[u]:d.getMonth(),y=l>-1?+i[l]:d.getDate(),m=a>-1?+i[a]:d.getHours(),h=c>-1?+i[c]:d.getMinutes(),v=f>-1?+i[f]:d.getSeconds(),new Date(p,g,y,m,h,v);this.log("Empty Date Cell Text!",e)}else this.log("Date node not found!",e);var t,n,r,o,i,u,l,s,a,c,f,d,p,g,y,m,h,v;return null},e.prototype.getFilesList=function(){var e=this;return Array.from(a(document,s).querySelectorAll("table")).map((function(t){var n=t.querySelectorAll("td"),r=n[5],o=n[9],i=r?r.querySelector("a"):null;return{url:i?i.href:null,sendDate:o?e.getDateFromElement(o.firstChild):new Date}})).sort((function(e,t){return e.sendDate.getTime()-t.sendDate.getTime()}))},e.prototype.downloadFile=function(e){this.log("file download >>",e),e.url&&window.open(e.url,"_blank")},e}();!function(e){e.parser=new c,e.getElementByIdPattern=a}(window)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,