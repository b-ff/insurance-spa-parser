!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t){var r=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),o=0;for(t=0;t<r;t++)for(var i=arguments[t],l=0,u=i.length;l<u;l++,o++)n[o]=i[l];return n},n=/^filter-panel-\d{4,}_header-title-textEl$/,o=/^messageTypeCombo-\d{4,}-inputEl$/,i=/^commonInsurersCombo-{4,}-picker-listEl$/,l=function(e,t,r){void 0===r&&(r="div");var n=e.querySelectorAll(r);return Array.from(n).find((function(e){return t.test(e.id)}))},u=function(){function e(){var e=this,t=setInterval((function(){var r=l(document,n);r&&(e.addStartButton(r),clearInterval(t))}),500);this.log("Parser initialized!")}return e.prototype.log=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];console&&console.log&&console.log.apply(console,r(["Parser: "],e))},e.prototype.addStartButton=function(e){var t=this,r=document.createElement("button");r.innerHTML="Запустить сбор данных",r.id="parser-start-button",r.style.marginLeft="10px",r.style.cursor="pointer",r.onclick=function(){t.startParser()},e.append(r),this.log("Added start button to container:",e)},e.prototype.startParser=function(){this.log("Parser started!"),this.downloadFile(this.getFilesList().pop())},e.prototype.getMessageTypes=function(){return["Отчёт МО в МГФОМС","Отчёт МО в СМО"]},e.prototype.setMessageType=function(e){l(document,o,"input").value=e},e.prototype.getInsurers=function(){return Array.from(l(document,i,"ul").childNodes).map((function(e){return e.textContent.trim()}))},e.prototype.setInsurer=function(){},e.prototype.getDateFromElement=function(e){if(e){if(e.textContent)return t=e.textContent,r="dd.mm.yyyy hh:ii",n=t.replace(/[^a-zA-Z0-9]/g,"-"),o=r.toLowerCase().replace(/[^a-zA-Z0-9]/g,"-").split("-"),i=n.split("-"),l=o.indexOf("mm"),u=o.indexOf("dd"),a=o.indexOf("yyyy"),s=o.indexOf("hh"),c=o.indexOf("ii"),d=o.indexOf("ss"),f=new Date,p=a>-1?+i[a]:f.getFullYear(),y=l>-1?+i[l]:f.getMonth(),g=u>-1?+i[u]:f.getDate(),m=s>-1?+i[s]:f.getHours(),h=c>-1?+i[c]:f.getMinutes(),v=d>-1?+i[d]:f.getSeconds(),new Date(p,y,g,m,h,v);this.log("Empty Date Cell Text!",e)}else this.log("Date node not found!",e);var t,r,n,o,i,l,u,a,s,c,d,f,p,y,g,m,h,v;return null},e.prototype.getFilesList=function(){var e=this;return Array.from(document.querySelector("#parcelsList-1980").querySelectorAll("table")).map((function(t){var r=t.querySelector(".x-grid-cell-gridcolumn-1988"),n=t.querySelector(".x-grid-cell-datecolumn-1992");return{url:r?r.querySelector("a").href:null,sendDate:n?e.getDateFromElement(n.firstChild):new Date}})).sort((function(e,t){return e.sendDate.getTime()-t.sendDate.getTime()}))},e.prototype.downloadFile=function(e){this.log("file download >>",e),e.url&&window.open(e.url,"_blank")},e}();window.parser=new u}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,